
name: The OSS Review Toolkit (ORT) Ilia

on:
    workflow_dispatch:
        inputs:
            branch-name:
                description: 'The branch to run against the ORT tool'
                required: false
                default: ''
            commit-id:
                description: 'Commit ID to run against the ORT tool'
                required: false
                default: ''

jobs:
    run-ort:
        name: Create attribution files
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
        env: 
            PYTHON_ATTRIBUTIONS: "python/THIRD_PARTY_LICENSES_PYTHON"
            NODE_ATTRIBUTIONS: "node/THIRD_PARTY_LICENSES_NODE"
            RUST_ATTRIBUTIONS: "glide-core/THIRD_PARTY_LICENSES_RUST"
            JAVA_ATTRIBUTIONS: "java/THIRD_PARTY_LICENSES_JAVA"
        steps:
          - name: Check mutually exclusive branch-name and commit-id
            id: validate
            run: |
                if [[ -n "$INPUT_TARGET_BRANCH" && -n "$INPUT_TARGET_COMMIT" ]]; then
                    echo "Error: Both branch-name and commit-id are provided. Only one should be specified."
                    exit 1
                elif [[ -z "$INPUT_TARGET_BRANCH" && -z "$INPUT_TARGET_COMMIT" ]]; then
                    echo "Error: Neither branch-name nor commit-id are provided. One must be specified."
                    exit 1
                fi
            env:
                INPUT_TARGET_BRANCH: ${{ github.event.inputs.branch-name }}
                INPUT_TARGET_COMMIT: ${{ github.event.inputs.commit-id }}

          - name: Proceed with workflow
            if: success()
            run: echo "Inputs are valid. Proceeding with workflow execution..."

          - name: Checkout main
            uses: actions/checkout@v4
            # with:
            #     submodules: "false"
            #     ref: ${{ env.TARGET_COMMIT }}

          - name: Checkout target commit
            shell: bash
            run: |
                if [[ -n "$INPUT_TARGET_BRANCH" ]]; then
                  git checkout "$INPUT_TARGET_BRANCH"
                else
                  pwd
                  ls -la
                  git branch -a
                  git checkout "$INPUT_TARGET_COMMIT"
                fi
                echo "TARGET_COMMIT=`git rev-parse`" >> $GITHUB_ENV

            env:
                INPUT_TARGET_BRANCH: ${{ github.event.inputs.branch-name }}
                INPUT_TARGET_COMMIT: ${{ github.event.inputs.commit-id }}

          - name: Set up JDK 11 for the ORT package
            uses: actions/setup-java@v4
            with:
                distribution: "temurin"
                java-version: 11

          - name: Cache ORT and Gradle packages
            uses: actions/cache@v4
            id: cache-ort
            with:
                path: |
                    ./ort
                    ~/.gradle/caches
                    ~/.gradle/wrapper
                key: ${{ runner.os }}-ort

          - name: Checkout ORT Repository
            if: steps.cache-ort.outputs.cache-hit != 'true'
            uses: actions/checkout@v4
            with:
                repository: "oss-review-toolkit/ort"
                path: "./ort"
                ref: "26.0.0"
                submodules: recursive

          - name: Install Rust toolchain
            uses: dtolnay/rust-toolchain@1.78

          - name: Build and install ORT
            if: steps.cache-ort.outputs.cache-hit != 'true'
            working-directory: ./ort/
            run: |
                export JAVA_OPTS="$JAVA_OPTS -Xmx8g"
                ./gradlew installDist

          - name: Create ORT config file
            run: |
                mkdir -p ~/.ort/config
                cat << EOF > ~/.ort/config/config.yml
                ort:
                    analyzer:
                    allowDynamicVersions: true
                    enabledPackageManagers: [Cargo, NPM, PIP, GradleInspector]
                EOF
                cat ~/.ort/config/config.yml

            ### Python ###
          - name: Set up Python 3.10
            uses: actions/setup-python@v5
            with:
                python-version: "3.10"

          - name: Install python-inspector
            working-directory: ./python
            run: |
                python -m pip install --upgrade pip
                pip install git+https://github.com/nexB/python-inspector

          - name: Run ORT tools for Python
            uses: ./.github/workflows/run-ort-tools
            with:
                folder_path: "${{ github.workspace }}/python"

            ### Rust glide-core ###
          - name: Run ORT tools for glide-core
            uses: ./.github/workflows/run-ort-tools
            with:
              folder_path: "${{ github.workspace }}/glide-core"
